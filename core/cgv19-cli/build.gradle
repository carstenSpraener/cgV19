plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'org.yaml:snakeyaml:2.0'

    implementation project(":cgv19-core")

    compileOnly project(":cgv19-oom")
    compileOnly project(":cgv19-javapoet")
    compileOnly project(":cgv19-metacartridge")
    compileOnly project(":cgv19-pojo")
    for( String cName in listCartridges() ) {
        compileOnly project(":${cName}")
    }
    implementation 'org.slf4j:slf4j-jdk14:1.7.36'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': "de.spraener.nxtgen.cli.CGV19"
    }
}

startScripts {
    mainClass = 'de.spraener.nxtgen.cli.CGV19'
    applicationName = 'cgv19'
    doLast {
        def scriptFile = file "${outputDir}/${applicationName}"
        scriptFile.text = scriptFile.text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME/cartridges/*:$APP_HOME/lib')
        scriptFile.text = scriptFile.text.replace("DEFAULT_JVM_OPTS=\"\"\n", "DEFAULT_JVM_OPTS=\"-Dapp.path=\$app_path\"\n")

        def dosFile = file "${outputDir}/${applicationName}.bat"
        dosFile.text = dosFile.text.replace('CLASSPATH=%APP_HOME%\\lib', 'CLASSPATH=%APP_HOME%\\cartridges\\*:%APP_HOME%/lib')
        dosFile.text = dosFile.text.replace("DEFAULT_JVM_OPTS=", "DEFAULT_JVM_OPTS=-Dapp.path=%DIRNAME%")
    }
}

application {

    applicationDistribution.from(project(":cgv19-oom").buildDir.absolutePath+"/libs") {
        include "cgv19*.jar"
    }.into("cartridges")

    applicationDistribution.from(project(":cgv19-javapoet").buildDir.absolutePath+"/libs") {
        include "cgv19*.jar"
    }.into("cartridges")

    applicationDistribution.from(project(":cgv19-metacartridge").buildDir.absolutePath+"/libs") {
                include "cgv19*.jar"
    }.into("cartridges")

    applicationDistribution.from(project(":cgv19-pojo").buildDir.absolutePath+"/libs") {
                include "cgv19*.jar"
    }.into("cartridges")

    for( String cName in listCartridges() ) {
        applicationDistribution.from(project(":${cName}").buildDir.absolutePath+"/libs") {
            include "*.jar"
        }.into("cartridges")
    }

    applicationDistribution.from(project(":cgv19-cli").projectDir.absolutePath+"/src/main/blueprints") {
        include "**/*"
    }.into("cartridges/blueprints")
}

def listCartridges() {
    File cartridgeDir = new File(projectDir.getAbsolutePath()+"/../../cartridges");
    return cartridgeDir.list ((f,n)-> {
        if(n.startsWith("cgv19-") && !n.contains(".") ) {
            return true;
        } else {
            return false;
        }
    })
}
